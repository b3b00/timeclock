@page "/historic"
@inject ITimeClock _timer
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
<h1>Historique</h1>


@if (times == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Début</th>
                <th>Fin</th>
                <th>Durée</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var times  in times)
            {
                <tr><td colspan="4" style="border-top:solid 2px black">@times.Key</td></tr>
                                                 @foreach (var time in times)
                                                 {
                                                     <tr>
                                                         <td>&nbsp;</td>
                                                         <td>@time.StartTime</td>
                                                         <td>@time.StopTime</td>
                                                         <td>@time.Duration.ToString("hh\\:mm")</td>
                                                     </tr>
                                                 }
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<IGrouping<string, DayTime>> times;

    protected override async Task OnInitializedAsync()
    {
        times = await _timer.GetHistoric(_localStorage);
    }

    
}
